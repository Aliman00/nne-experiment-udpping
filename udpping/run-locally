#!/bin/bash -e
# =================================================================
#          #     #                 #     #
#          ##    #   ####   #####  ##    #  ######   #####
#          # #   #  #    #  #    # # #   #  #          #
#          #  #  #  #    #  #    # #  #  #  #####      #
#          #   # #  #    #  #####  #   # #  #          #
#          #    ##  #    #  #   #  #    ##  #          #
#          #     #   ####   #    # #     #  ######     #
#
#       ---   The NorNet Testbed for Multi-Homed Systems  ---
#                       https://www.nntb.no
# =================================================================
#
# Container-based UDPPing for NorNet Edge
#
# Copyright (C) 2018 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@simula.no

CONTAINER="dreibh/udpping"
TESTNAME="test0"
WORKDIR="/run/shm/${TESTNAME}"


echo "Prepare:"
rm -rf $WORKDIR
mkdir -p $WORKDIR
echo '{ "sync_server": "pioneer.nntb.no", "sync_identity": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC3c5slgEdWW7XzmuNJkDswrd4FhSMGTVSMO7dujSrhP8pqMUDeXuAYsD0Tn6gwitScm30V/T4gxbDxnHokWuuqg6m3aotxvqnxOHdbtlQW9Ho5tqU469JDq7QZYnJmLjSgJ5cQYodEzfLJxQzgpHDzNMa/P224c18+SdhRL7LtYLBMtJLW1cG/aJ6Wlg7H3qzxjKG36YDZ3TRz0sEH+xuHK2VTZENQJ66IC+WUHwSiMpArb6t07r8cNZNv6VLbtIVj3xYO9olu08L0atPeKJjXvPz/6E2qeiFcFzjRlk/LRee1a73VoAPu+RzjFqVt88f5KtQRWdytV1zRSLTpWYsTeY7t8I5/cYzBCviZXygV3IpcoSgppnyKKF2ZSICXsT3QTsdIFVnB95my9bIZmgOk7B0gvF0eOG+UB1wI7jk4Iq7HsAqf9MYojwINiydGHfzsRYEdAuK4eipbKjD7NErqBur6XuxjrAxulVmjFBJLaJz+S2NFkdB6iRCcwHSBNNnYypdyUB5Z/JGx60H38h31oSoaotV4v14Dy4y7jxKAV9c4m9rfOexpRrPZ61yuM2CE9Jv6wn6aJVxkLCvJoOi0s6iOgOTyCLAL+hoLPq+U9zTUUuGPKxhsrmihOqqSCLux73VTspO9Y8P8ZjsRvOm8ym3ZpDHhnh5vKnPfLJCbWw== invalid@example.org" }' >$WORKDIR/config
echo '999' >$WORKDIR/nodeid
mkdir -p $WORKDIR/results


echo "Update:"
docker kill ${TESTNAME} || true
docker container rm ${TESTNAME} || true

./build
docker tag ${CONTAINER} ${CONTAINERTAG}
#./push


echo "Run"
docker run \
   --name ${TESTNAME} \
   --cap-add NET_ADMIN \
   --cap-add NET_RAW \
   --shm-size=1G \
   -v $WORKDIR:/monroe/results \
   -v `pwd`/config:/monroe/config:ro \
   -v `pwd`/nodeid:/nodeid:ro \
   ${CONTAINERTAG} &

sleep 1

echo "Shell:"
docker exec --interactive=true --tty=true ${TESTNAME} /bin/bash
